# Copyright 2025 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


presubmits:
  - name: pre-kubermatic-appcatalog-aikit
    run_if_changed: "(pkg/ee/default-application-catalog/aikit-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "aikit"
            - "--application-name"
            - "aikit"
            - "--application-namespace"
            - "aikit"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "aikit"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-argocd
    run_if_changed: "(pkg/ee/default-application-catalog/argocd-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "argocd"
            - "--application-name"
            - "argocd"
            - "--application-namespace"
            - "argocd"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "argocd-application-controller,argocd-applicationset-controller,argocd-dex-server,argocd-notifications-controller,argocd-redis,argocd-repo-server,argocd-server"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-cluster-autoscaler
    run_if_changed: "(pkg/ee/default-application-catalog/cluster-autoscaler.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "cluster-autoscaler"
            - "--application-name"
            - "cluster-autoscaler"
            - "--application-namespace"
            - "kube-system"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "clusterapi-cluster-autoscaler"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-cert-manager
    run_if_changed: "(pkg/ee/default-application-catalog/cert-manager-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "cert-manager"
            - "--application-name"
            - "cert-manager"
            - "--application-namespace"
            - "cert-manager"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "cert-manager,startupapicheck,cainjector,webhook"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-falco
    run_if_changed: "(pkg/ee/default-application-catalog/falco-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "falco"
            - "--application-name"
            - "falco"
            - "--application-namespace"
            - "falco"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "falco"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-flux
    run_if_changed: "(pkg/ee/default-application-catalog/flux2-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "flux"
            - "--application-name"
            - "flux2"
            - "--application-namespace"
            - "flux2"
            - "--app-label-key"
            - "app"
            - "--names"
            - "helm-controller,image-automation-controller,image-reflector-controller,kustomize-controller,notification-controller,source-controller"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-k8sgpt
    run_if_changed: "(pkg/ee/default-application-catalog/k8sgpt-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "k8sgpt"
            - "--application-name"
            - "k8sgpt"
            - "--application-namespace"
            - "k8sgpt"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "k8sgpt-operator"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-k8sgpt-operator
    run_if_changed: "(pkg/ee/default-application-catalog/k8sgpt-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "k8sgpt-operator"
            - "--application-name"
            - "k8sgpt-operator"
            - "--application-namespace"
            - "k8sgpt-operator"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "k8sgpt-operator"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-kube-vip
    run_if_changed: "(pkg/ee/default-application-catalog/kube-vip-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "kube-vip"
            - "--application-name"
            - "kube-vip"
            - "--application-namespace"
            - "kube-vip"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "kube-vip"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-kubevirt
    run_if_changed: "(pkg/ee/default-application-catalog/kubevirt-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "kubevirt"
            - "--application-name"
            - "kubevirt"
            - "--application-namespace"
            - "kubevirt"
            - "--app-label-key"
            - "name"
            - "--names"
            - "cdi-operator,virt-operator"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-metallb
    run_if_changed: "(pkg/ee/default-application-catalog/metallb-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "metallb"
            - "--application-name"
            - "metallb"
            - "--application-namespace"
            - "metallb"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "metallb"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-nginx-ingress-controller
    run_if_changed: "(pkg/ee/default-application-catalog/nginx-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "nginx"
            - "--application-name"
            - "nginx"
            - "--application-namespace"
            - "nginx"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "ingress-nginx"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-nvidia-gpu-operator
    run_if_changed: "(pkg/ee/default-application-catalog/nvidia-gpu-operator-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "gpu-operator"
            - "--application-name"
            - "nvidia-gpu-operator"
            - "--application-namespace"
            - "nvidia-gpu-operator"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "nvidia-gpu-operator,node-feature-discovery"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-trivy
    run_if_changed: "(pkg/ee/default-application-catalog/trivy-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "trivy"
            - "--application-name"
            - "trivy"
            - "--application-namespace"
            - "trivy"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "trivy"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi

  - name: pre-kubermatic-appcatalog-trivy-operator
    run_if_changed: "(pkg/ee/default-application-catalog/trivy-operator-app.yaml)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws-e2e-kkp: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-mirror: "true"
      preset-docker-pull: "true"
      preset-docker-push: "true"
      preset-kind-volume-mounts: "true"
      preset-goproxy: "true"
      preset-e2e-ssh: "true"
    spec:
      containers:
        - image: quay.io/kubermatic/build:go-1.23-node-20-kind-0.24-4
          command:
            - "./hack/ci/run-default-application-e2e-test.sh"
          args:
            - "--application-installation-name"
            - "trivy-operator"
            - "--application-name"
            - "trivy-operator"
            - "--application-namespace"
            - "trivy-operator"
            - "--app-label-key"
            - "app.kubernetes.io/name"
            - "--names"
            - "trivy-operator"
          env:
            - name: KUBERMATIC_EDITION
              value: ee
            - name: SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: e2e-ci
                  key: serviceAccountSigningKey
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 6Gi